.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.13)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "Class::ErrorHandler 3"
.TH Class::ErrorHandler 3 "2015-05-10" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Class::ErrorHandler \- Base class for error handling
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    package Foo;
\&    use base qw( Class::ErrorHandler );
\&
\&    sub class_method {
\&        my $class = shift;
\&        ...
\&        return $class\->error("Help!")
\&            unless $continue;
\&    }
\&
\&    sub object_method {
\&        my $obj = shift;
\&        ...
\&        return $obj\->error("I am no more")
\&            unless $continue;
\&    }
\&
\&    package main;
\&    use Foo;
\&
\&    Foo\->class_method or die Foo\->errstr;
\&
\&    my $foo = Foo\->new;
\&    $foo\->object_method or die $foo\->errstr;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fIClass::ErrorHandler\fR provides an error-handling mechanism that's generic
enough to be used as the base class for a variety of \s-1OO\s0 classes. Subclasses
inherit its two error-handling methods, \fIerror\fR and \fIerrstr\fR, to
communicate error messages back to the calling program.
.PP
On failure (for whatever reason), a subclass should call \fIerror\fR and return
to the caller; \fIerror\fR itself sets the error message internally, then
returns \f(CW\*(C`undef\*(C'\fR. This has the effect of the method that failed returning
\&\f(CW\*(C`undef\*(C'\fR to the caller. The caller should check for errors by checking for a
return value of \f(CW\*(C`undef\*(C'\fR, and calling \fIerrstr\fR to get the value of the
error message on an error.
.PP
As demonstrated in the \s-1SYNOPSIS\s0, \fIerror\fR and \fIerrstr\fR work as both class
methods and object methods.
.SH "USAGE"
.IX Header "USAGE"
.SS "Class\->error($message)"
.IX Subsection "Class->error($message)"
.ie n .SS "$object\->error($message)"
.el .SS "\f(CW$object\fP\->error($message)"
.IX Subsection "$object->error($message)"
Sets the error message for either the class \fIClass\fR or the object
\&\fI\f(CI$object\fI\fR to the message \fI\f(CI$message\fI\fR. Returns \f(CW\*(C`undef\*(C'\fR.
.SS "Class\->errstr"
.IX Subsection "Class->errstr"
.ie n .SS "$object\->errstr"
.el .SS "\f(CW$object\fP\->errstr"
.IX Subsection "$object->errstr"
Accesses the last error message set in the class \fIClass\fR or the
object \fI\f(CI$object\fI\fR, respectively, and returns that error message.
.SH "LICENSE"
.IX Header "LICENSE"
This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself.
.SH "AUTHOR & COPYRIGHT"
.IX Header "AUTHOR & COPYRIGHT"
Except where otherwise noted, \fIClass::ErrorHandler\fR is Copyright 2004
Benjamin Trott, cpan@stupidfool.org. All rights reserved.
