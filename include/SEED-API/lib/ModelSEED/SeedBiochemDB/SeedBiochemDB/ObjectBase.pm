use strict;
use warnings;
no warnings qw(redefine);

1;

# this class is AUTOGENERATED and will be AUTOMATICALLY REGENERATED
# all work done in this module will be LOST


package SeedBiochemDB::FINISHED;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		JOBID => [ DB_SCALAR, undef, 0, undef ],
		DURATION => [ DB_SCALAR, undef, 0, undef ],
		FINISHED => [ DB_SCALAR, undef, 0, undef ],
		START => [ DB_SCALAR, undef, 0, undef ],
		COMMAND => [ DB_SCALAR, undef, 0, undef ],
		STATUS => [ DB_SCALAR, undef, 0, undef ],
		USER => [ DB_SCALAR, undef, 0, undef ],
		OWNER => [ DB_SCALAR, undef, 0, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "COMMAND" ],
			[ "OWNER" ],
			[ "USER" ],
		];
}

1;

package SeedBiochemDB::QUEUE;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		COMMAND => [ DB_SCALAR, undef, 0, undef ],
		TYPE => [ DB_SCALAR, undef, 0, undef ],
		USER => [ DB_SCALAR, undef, 0, undef ],
		OWNER => [ DB_SCALAR, undef, 0, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "COMMAND" ],
			[ "OWNER" ],
			[ "USER" ],
		];
}

1;

package SeedBiochemDB::MEDIA_USER;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		MEDIA => [ DB_OBJECT, "SeedBiochemDB::MEDIA", 1, undef ],
		USER => [ DB_OBJECT, "WebServerBackend::User", 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "USER" ],
			[ "MEDIA" ],
		];
}

1;

package SeedBiochemDB::FBA_MEDIA;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		FBA => [ DB_OBJECT, "SeedBiochemDB::FBA", 1, undef ],
		MEDIA => [ DB_OBJECT, "SeedBiochemDB::MEDIA", 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "MEDIA" ],
			[ "FBA" ],
		];
}

1;

package SeedBiochemDB::COMPOUNDS_KEGGMAPS;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		COMPOUNDS => [ DB_OBJECT, "SeedBiochemDB::COMPOUNDS", 1, undef ],
		COORDINATES => [ DB_SCALAR, undef, 1, undef ],
		KEGGMAPS => [ DB_OBJECT, "SeedBiochemDB::KEGGMAPS", 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "COMPOUNDS" ],
			[ "KEGGMAPS" ],
		];
}

1;

package SeedBiochemDB::REACTIONS_KEGGMAPS;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		REACTIONS => [ DB_OBJECT, "SeedBiochemDB::REACTIONS", 1, undef ],
		COORDINATES => [ DB_SCALAR, undef, 1, undef ],
		KEGGMAPS => [ DB_OBJECT, "SeedBiochemDB::KEGGMAPS", 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "REACTIONS" ],
			[ "KEGGMAPS" ],
		];
}

1;

package SeedBiochemDB::REACTIONS;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		THERMODYNAMICREVERSIBILITY => [ DB_SCALAR, undef, 1, undef ],
		last_modified => [ DB_SCALAR, undef, 0, undef ],
		CODE => [ DB_SCALAR, undef, 1, undef ],
		DEFINITION => [ DB_SCALAR, undef, 1, undef ],
		REACTIONS => [ DB_SCALAR, undef, 1, undef ],
		DELTAGERR => [ DB_SCALAR, undef, 0, undef ],
		EQUATION => [ DB_SCALAR, undef, 1, undef ],
		MAINEQUATION => [ DB_SCALAR, undef, 0, undef ],
		OBSOLETE => [ DB_SCALAR, undef, 1, undef ],
		REVERSIBILITY => [ DB_SCALAR, undef, 1, undef ],
		DELTAG => [ DB_SCALAR, undef, 0, undef ],
	};
}

sub unique_indices {
     return 
		[
			[ "REACTIONS" ],
			[ "CODE" ],
		];
}

sub indices {
     return 
		[
			[ "OBSOLETE" ],
		];
}

1;

package SeedBiochemDB::FBA_GENEKO;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		FBA => [ DB_OBJECT, "SeedBiochemDB::FBA", 1, undef ],
		GENE => [ DB_SCALAR, undef, 1, undef ],
		GENEKO => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "FBA" ],
			[ "GENEKO" ],
		];
}

1;

package SeedBiochemDB::REACTIONS_NAME;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		REACTIONS => [ DB_OBJECT, "SeedBiochemDB::REACTIONS", 1, undef ],
		NAME => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "REACTIONS" ],
			[ "NAME" ],
		];
}

1;

package SeedBiochemDB::REACTIONS_ROLE;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		REACTIONS => [ DB_OBJECT, "SeedBiochemDB::REACTIONS", 1, undef ],
		SUBSYSTEM => [ DB_SCALAR, undef, 1, undef ],
		last_modified => [ DB_SCALAR, undef, 0, undef ],
		MASTER => [ DB_SCALAR, undef, 1, undef ],
		COMPLEX => [ DB_SCALAR, undef, 0, undef ],
		ROLE => [ DB_SCALAR, undef, 1, undef ],
		SOURCE => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "MASTER" ],
			[ "ROLE" ],
			[ "REACTIONS" ],
			[ "SUBSYSTEM" ],
		];
}

1;

package SeedBiochemDB::FBA_MODELS;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		FBA => [ DB_OBJECT, "SeedBiochemDB::FBA", 1, undef ],
		MODELS => [ DB_OBJECT, "SeedBiochemDB::MODELS", 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "MODELS" ],
			[ "FBA" ],
		];
}

1;

package SeedBiochemDB::FBA_REACTIONKO;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		REACTIONS => [ DB_OBJECT, "SeedBiochemDB::REACTIONS", 1, undef ],
		FBA => [ DB_OBJECT, "SeedBiochemDB::FBA", 1, undef ],
		REACTIONKO => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "FBA" ],
			[ "REACTIONKO" ],
		];
}

1;

package SeedBiochemDB::ECNUMBERS_KEGGMAPS;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		COORDINATES => [ DB_SCALAR, undef, 1, undef ],
		KEGGMAPS => [ DB_OBJECT, "SeedBiochemDB::KEGGMAPS", 1, undef ],
		ENZYME => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "ENZYME" ],
			[ "KEGGMAPS" ],
		];
}

1;

package SeedBiochemDB::MEDIA_COMPOUNDS;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		COMPOUNDS => [ DB_OBJECT, "SeedBiochemDB::COMPOUNDS", 1, undef ],
		MIN => [ DB_SCALAR, undef, 1, undef ],
		COMPARTMENTS => [ DB_OBJECT, "SeedBiochemDB::COMPARTMENTS", 1, undef ],
		MAX => [ DB_SCALAR, undef, 1, undef ],
		MEDIA => [ DB_OBJECT, "SeedBiochemDB::MEDIA", 1, undef ],
		TYPE => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "COMPOUNDS" ],
			[ "MEDIA" ],
			[ "TYPE" ],
			[ "COMPARTMENTS" ],
		];
}

1;

package SeedBiochemDB::MODELS_REACTIONS;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		REACTIONS => [ DB_OBJECT, "SeedBiochemDB::REACTIONS", 1, undef ],
		MODELS => [ DB_OBJECT, "SeedBiochemDB::MODELS", 1, undef ],
		REFERENCE => [ DB_SCALAR, undef, 0, undef ],
		SUBSYSTEM => [ DB_SCALAR, undef, 0, undef ],
		ASSOCIATEDPEG => [ DB_SCALAR, undef, 0, undef ],
		DIRECTIONALITY => [ DB_SCALAR, undef, 0, undef ],
		NOTES => [ DB_SCALAR, undef, 0, undef ],
		COMPARTMENT => [ DB_SCALAR, undef, 0, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "REACTIONS" ],
		];
}

1;

package SeedBiochemDB::MEDIA_REACTIONS;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		MIN => [ DB_SCALAR, undef, 1, undef ],
		REACTIONS => [ DB_OBJECT, "SeedBiochemDB::REACTIONS", 1, undef ],
		COMPARTMENTS => [ DB_OBJECT, "SeedBiochemDB::COMPARTMENTS", 1, undef ],
		MAX => [ DB_SCALAR, undef, 1, undef ],
		MEDIA => [ DB_OBJECT, "SeedBiochemDB::MEDIA", 1, undef ],
		TYPE => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "REACTIONS" ],
			[ "MEDIA" ],
			[ "TYPE" ],
			[ "COMPARTMENTS" ],
		];
}

1;

package SeedBiochemDB::REACTIONS_ENZYME;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		REACTIONS => [ DB_OBJECT, "SeedBiochemDB::REACTIONS", 1, undef ],
		ENZYME => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "REACTIONS" ],
			[ "ENZYME" ],
		];
}

1;

package SeedBiochemDB::COMPOUNDS_NAME;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		COMPOUNDS => [ DB_OBJECT, "SeedBiochemDB::COMPOUNDS", 1, undef ],
		NAME => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "COMPOUNDS" ],
			[ "NAME" ],
		];
}

1;

package SeedBiochemDB::COMPARTMENTS;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		NAME => [ DB_SCALAR, undef, 1, undef ],
		COMPARTMENTS => [ DB_SCALAR, undef, 1, undef ],
		OUTSIDE => [ DB_SCALAR, undef, 0, undef ],
	};
}

sub unique_indices {
     return 
		[
			[ "COMPARTMENTS" ],
		];
}

sub indices {
     return 
		[
			[ "NAME" ],
		];
}

1;

package SeedBiochemDB::MEDIA;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		PUBLIC => [ DB_SCALAR, undef, 1, undef ],
		MEDIA => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "MEDIA" ],
		];
}

1;

package SeedBiochemDB::COMPOUNDS;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		MASS => [ DB_SCALAR, undef, 0, undef ],
		last_modified => [ DB_SCALAR, undef, 0, undef ],
		COMPOUNDS => [ DB_SCALAR, undef, 1, undef ],
		CHARGE => [ DB_SCALAR, undef, 0, undef ],
		DELTAGERR => [ DB_SCALAR, undef, 0, undef ],
		FORMULA => [ DB_SCALAR, undef, 0, undef ],
		STRINGCODE => [ DB_SCALAR, undef, 0, undef ],
		OBSOLETE => [ DB_SCALAR, undef, 1, undef ],
		DELTAG => [ DB_SCALAR, undef, 0, undef ],
	};
}

sub unique_indices {
     return 
		[
			[ "COMPOUNDS" ],
		];
}

sub indices {
     return 
		[
			[ "OBSOLETE" ],
		];
}

1;

package SeedBiochemDB::MODELS_USER;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		MODELS => [ DB_OBJECT, "SeedBiochemDB::MODELS", 1, undef ],
		TYPE => [ DB_SCALAR, undef, 0, undef ],
		USER => [ DB_OBJECT, "WebServerBackend::User", 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "MODELS" ],
			[ "USER" ],
		];
}

1;

package SeedBiochemDB::FBA;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		NAME => [ DB_SCALAR, undef, 0, undef ],
		FBA => [ DB_SCALAR, undef, 1, undef ],
		TYPE => [ DB_SCALAR, undef, 1, undef ],
		USER => [ DB_OBJECT, "WebServerBackend::User", 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "USER" ],
		];
}

1;

package SeedBiochemDB::COMPOUNDS_DBLINKS;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		COMPOUNDS => [ DB_OBJECT, "SeedBiochemDB::COMPOUNDS", 1, undef ],
		DBLINKS => [ DB_SCALAR, undef, 0, undef ],
		TYPE => [ DB_SCALAR, undef, 0, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "COMPOUNDS" ],
			[ "DBLINKS" ],
			[ "TYPE" ],
		];
}

1;

package SeedBiochemDB::COMPOUNDS_SEARCHNAME;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		COMPOUNDS => [ DB_OBJECT, "SeedBiochemDB::COMPOUNDS", 1, undef ],
		SEARCHNAME => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "COMPOUNDS" ],
			[ "SEARCHNAME" ],
		];
}

1;

package SeedBiochemDB::REACTIONS_COMPOUNDS;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		COMPOUNDS => [ DB_OBJECT, "SeedBiochemDB::COMPOUNDS", 1, undef ],
		REACTIONS => [ DB_OBJECT, "SeedBiochemDB::REACTIONS", 1, undef ],
		MAIN => [ DB_SCALAR, undef, 0, undef ],
		COMPARTMENTS => [ DB_OBJECT, "SeedBiochemDB::COMPARTMENTS", 1, undef ],
		STOICHIOMETRY => [ DB_SCALAR, undef, 0, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "REACTIONS" ],
			[ "COMPOUNDS" ],
		];
}

1;

package SeedBiochemDB::MODELS;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		SUBSYSTEMGENESWITHREACTIONS => [ DB_SCALAR, undef, 0, undef ],
		GENESWITHFUNCTIONS => [ DB_SCALAR, undef, 0, undef ],
		BIOLOGGAPFILLINGREACTIONS => [ DB_SCALAR, undef, 0, undef ],
		GRAMNEGATIVEGENES => [ DB_SCALAR, undef, 0, undef ],
		BUILDDATE => [ DB_SCALAR, undef, 0, undef ],
		PRIVATE => [ DB_SCALAR, undef, 0, undef ],
		GRAMPOSITIVEGENES => [ DB_SCALAR, undef, 0, undef ],
		ORGANISMNAME => [ DB_SCALAR, undef, 0, undef ],
		TOTALGENES => [ DB_SCALAR, undef, 0, undef ],
		SUBSYSTEMGENES => [ DB_SCALAR, undef, 0, undef ],
		NONSUBSYSTEMGENES => [ DB_SCALAR, undef, 0, undef ],
		GAPFILLDATE => [ DB_SCALAR, undef, 0, undef ],
		NUMBEROFREACTIONS => [ DB_SCALAR, undef, 0, undef ],
		GAPFILLINGREACTIONS => [ DB_SCALAR, undef, 0, undef ],
		DIRECTORY => [ DB_SCALAR, undef, 0, undef ],
		GAPFILLVERSION => [ DB_SCALAR, undef, 0, undef ],
		GENESWITHREACTIONS => [ DB_SCALAR, undef, 0, undef ],
		CLASS => [ DB_SCALAR, undef, 0, undef ],
		TRANSPORTREACTION => [ DB_SCALAR, undef, 0, undef ],
		SPONTANEOUS => [ DB_SCALAR, undef, 0, undef ],
		MODELS => [ DB_SCALAR, undef, 1, undef ],
		METABOLITES => [ DB_SCALAR, undef, 0, undef ],
		GAPFILLINGTIME => [ DB_SCALAR, undef, 0, undef ],
		GROWMATCHREACTIONS => [ DB_SCALAR, undef, 0, undef ],
		VERSION => [ DB_SCALAR, undef, 0, undef ],
		NONSUBSYSTEMGENESWITHREACTIONS => [ DB_SCALAR, undef, 0, undef ],
		SOURCE => [ DB_SCALAR, undef, 0, undef ],
		ORGANISMID => [ DB_SCALAR, undef, 0, undef ],
	};
}

sub unique_indices {
     return 
		[
			[ "MODELS" ],
		];
}

sub indices {
     return 
		[
		];
}

1;

package SeedBiochemDB::REACTIONS_PATHWAY;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		PATHWAY => [ DB_SCALAR, undef, 1, undef ],
		REACTIONS => [ DB_OBJECT, "SeedBiochemDB::REACTIONS", 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "REACTIONS" ],
		];
}

1;

package SeedBiochemDB::REACTIONS_DBLINKS;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		REACTIONS => [ DB_OBJECT, "SeedBiochemDB::REACTIONS", 1, undef ],
		DBLINKS => [ DB_SCALAR, undef, 1, undef ],
		TYPE => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "REACTIONS" ],
			[ "DBLINKS" ],
			[ "TYPE" ],
		];
}

1;

package SeedBiochemDB::KEGGMAPS;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		NAME => [ DB_SCALAR, undef, 1, undef ],
		KEGGMAPS => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "KEGGMAPS" ],
			[ "NAME" ],
		];
}

1;

package SeedBiochemDB::REACTIONS_ROLEHISTORY;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		REACTIONS => [ DB_OBJECT, "SeedBiochemDB::REACTIONS", 1, undef ],
		SUBSYSTEM => [ DB_SCALAR, undef, 1, undef ],
		last_modified => [ DB_SCALAR, undef, 0, undef ],
		COMPLEX => [ DB_SCALAR, undef, 0, undef ],
		ROLE => [ DB_SCALAR, undef, 1, undef ],
		USER => [ DB_OBJECT, "WebServerBackend::User", 1, undef ],
		SOURCE => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "ROLE" ],
			[ "REACTIONS" ],
			[ "SUBSYSTEM" ],
		];
}

1;

package SeedBiochemDB::RUNNING;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		FILE => [ DB_SCALAR, undef, 0, undef ],
		DURATION => [ DB_SCALAR, undef, 0, undef ],
		TYPE => [ DB_SCALAR, undef, 0, undef ],
		JOBID => [ DB_SCALAR, undef, 0, undef ],
		START => [ DB_SCALAR, undef, 0, undef ],
		COMMAND => [ DB_SCALAR, undef, 0, undef ],
		USER => [ DB_SCALAR, undef, 0, undef ],
		OWNER => [ DB_SCALAR, undef, 0, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "COMMAND" ],
			[ "OWNER" ],
			[ "USER" ],
		];
}

1;

package SeedBiochemDB::REACTIONS_STRUCTURAL_CUES;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		REACTIONS => [ DB_OBJECT, "SeedBiochemDB::REACTIONS", 1, undef ],
		STRUCTURAL_CUES => [ DB_SCALAR, undef, 1, undef ],
		TYPE => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "REACTIONS" ],
			[ "STRUCTURAL_CUES" ],
		];
}

1;

package SeedBiochemDB::COMPOUNDS_STRUCTURAL_CUES;

use DBObject;
use base qw(DBObject);

sub attributes {
     return {
		COMPOUNDS => [ DB_OBJECT, "SeedBiochemDB::COMPOUNDS", 1, undef ],
		STRUCTURAL_CUES => [ DB_SCALAR, undef, 1, undef ],
		TYPE => [ DB_SCALAR, undef, 1, undef ],
	};
}

sub unique_indices {
     return 
		[
		];
}

sub indices {
     return 
		[
			[ "COMPOUNDS" ],
			[ "STRUCTURAL_CUES" ],
		];
}

1;
